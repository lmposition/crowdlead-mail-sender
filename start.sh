#!/bin/bash
set -e

echo "üöÄ D√©marrage de l'application Email Manager..."

# V√©rification des variables d'environnement
if [ -z "$DATABASE_URL" ]; then
  echo "‚ùå ERROR: DATABASE_URL n'est pas d√©fini"
  exit 1
fi

if [ -z "$RESEND_API_KEY" ]; then
  echo "‚ö†Ô∏è WARNING: RESEND_API_KEY n'est pas d√©fini"
fi

if [ -z "$FROM_EMAIL" ]; then
  echo "‚ö†Ô∏è WARNING: FROM_EMAIL n'est pas d√©fini"
fi

# G√©n√©ration des cl√©s API si n√©cessaire
if [ -z "$EMAIL_API_KEY" ]; then
  export EMAIL_API_KEY=$(openssl rand -hex 16)
  echo "üìß EMAIL_API_KEY g√©n√©r√©e: $EMAIL_API_KEY"
fi

if [ -z "$CONFIG_API_KEY" ]; then
  export CONFIG_API_KEY=$(openssl rand -hex 16)
  echo "‚öôÔ∏è CONFIG_API_KEY g√©n√©r√©e: $CONFIG_API_KEY"
fi

# Cr√©ation des tables PostgreSQL si n√©cessaire
echo "üõ¢Ô∏è Initialisation de la base de donn√©es..."
PGPASSWORD=${DATABASE_URL##*:} psql ${DATABASE_URL} -c "
CREATE TABLE IF NOT EXISTS email_templates (
    id TEXT PRIMARY KEY,
    name TEXT NOT NULL,
    subject TEXT NOT NULL,
    html TEXT NOT NULL,
    from_email TEXT,
    params TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS email_logs (
    id SERIAL PRIMARY KEY,
    template_id TEXT NOT NULL,
    recipient_email TEXT NOT NULL,
    subject TEXT NOT NULL,
    status TEXT NOT NULL,
    error_message TEXT,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (template_id) REFERENCES email_templates(id) ON DELETE CASCADE
);"

# Lancer l'application
echo "üöÄ Lancement de l'API Email Manager..."
exec ./email-api